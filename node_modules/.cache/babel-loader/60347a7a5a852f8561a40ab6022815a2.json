{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Downloads\\\\movable\\\\drag-and-drop-tut-master\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst listItems = [{\n  id: \"1\",\n  name: \"Study Spanish\"\n}, {\n  id: \"2\",\n  name: \"Workout\"\n}, {\n  id: \"3\",\n  name: \"Film Youtube\"\n}, {\n  id: \"4\",\n  name: \"Grocery Shop\"\n}];\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  padding: 10,\n  margin: `0 50px 15px 50px`,\n  background: isDragging ? \"#4a2975\" : \"white\",\n  color: isDragging ? \"white\" : \"black\",\n  border: `1px solid black`,\n  fontSize: `20px`,\n  borderRadius: `5px`,\n  ...draggableStyle\n});\n\nfunction App() {\n  _s();\n\n  const [todo, setTodo] = useState(listItems);\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const items = Array.from(todo);\n    const [newOrder] = items.splice(source.index, 1);\n    items.splice(destination.index, 0, newOrder);\n    setTodo(items);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Drag and Drop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"todo\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: todo.map((_ref, index) => {\n            let {\n              id,\n              name\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 12\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 10\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"5J/m9cOP7jXwLcwiNc5/F3I/sNc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DragDropContext","Draggable","Droppable","listItems","id","name","getItemStyle","isDragging","draggableStyle","padding","margin","background","color","border","fontSize","borderRadius","App","todo","setTodo","onDragEnd","result","source","destination","items","Array","from","newOrder","splice","index","provided","droppableProps","innerRef","map","snapshot","draggableProps","dragHandleProps","style"],"sources":["C:/Users/Asus/Downloads/movable/drag-and-drop-tut-master/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport { DragDropContext, Draggable, Droppable, DropResult } from \"react-beautiful-dnd\"\nimport \"./App.css\"\n\n\n\nconst listItems = [\n\t{\n\t\tid: \"1\",\n\t\tname: \"Study Spanish\"\n\t},\n\t{\n\t\tid: \"2\",\n\t\tname: \"Workout\"\n\t},\n\t{\n\t\tid: \"3\",\n\t\tname: \"Film Youtube\"\n\t},\n\t{\n\t\tid: \"4\",\n\t\tname: \"Grocery Shop\"\n\t}\n]\n\nconst getItemStyle = (isDragging: boolean, draggableStyle: any) => ({\n\tpadding: 10,\n\tmargin: `0 50px 15px 50px`,\n\tbackground: isDragging ? \"#4a2975\" : \"white\",\n\tcolor: isDragging ? \"white\" : \"black\",\n\tborder: `1px solid black`,\n\tfontSize: `20px`,\n\tborderRadius: `5px`,\n\n\t...draggableStyle\n})\n\nfunction App() {\n\tconst [ todo, setTodo ] = useState(listItems)\n\n\tconst onDragEnd = (result: DropResult) => {\n\t\tconst { source, destination } = result\n\t\tif (!destination) return\n\n\t\tconst items = Array.from(todo)\n\t\tconst [ newOrder ] = items.splice(source.index, 1)\n\t\titems.splice(destination.index, 0, newOrder)\n\n\t\tsetTodo(items)\n\t}\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Drag and Drop</h1>\n\t\t\t<DragDropContext onDragEnd={onDragEnd}>\n\t\t\t\t<Droppable droppableId=\"todo\">\n\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t<div className=\"todo\" {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t{todo.map(({ id, name }, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Draggable key={id} draggableId={id} index={index}>\n\t\t\t\t\t\t\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Droppable>\n\t\t\t</DragDropContext>\n\t\t</div>\n\t)\n}\n\nexport default App\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAkE,qBAAlE;AACA,OAAO,WAAP;;AAIA,MAAMC,SAAS,GAAG,CACjB;EACCC,EAAE,EAAE,GADL;EAECC,IAAI,EAAE;AAFP,CADiB,EAKjB;EACCD,EAAE,EAAE,GADL;EAECC,IAAI,EAAE;AAFP,CALiB,EASjB;EACCD,EAAE,EAAE,GADL;EAECC,IAAI,EAAE;AAFP,CATiB,EAajB;EACCD,EAAE,EAAE,GADL;EAECC,IAAI,EAAE;AAFP,CAbiB,CAAlB;;AAmBA,MAAMC,YAAY,GAAG,CAACC,UAAD,EAAsBC,cAAtB,MAA+C;EACnEC,OAAO,EAAE,EAD0D;EAEnEC,MAAM,EAAG,kBAF0D;EAGnEC,UAAU,EAAEJ,UAAU,GAAG,SAAH,GAAe,OAH8B;EAInEK,KAAK,EAAEL,UAAU,GAAG,OAAH,GAAa,OAJqC;EAKnEM,MAAM,EAAG,iBAL0D;EAMnEC,QAAQ,EAAG,MANwD;EAOnEC,YAAY,EAAG,KAPoD;EASnE,GAAGP;AATgE,CAA/C,CAArB;;AAYA,SAASQ,GAAT,GAAe;EAAA;;EACd,MAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBnB,QAAQ,CAACI,SAAD,CAAlC;;EAEA,MAAMgB,SAAS,GAAIC,MAAD,IAAwB;IACzC,MAAM;MAAEC,MAAF;MAAUC;IAAV,IAA0BF,MAAhC;IACA,IAAI,CAACE,WAAL,EAAkB;IAElB,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWR,IAAX,CAAd;IACA,MAAM,CAAES,QAAF,IAAeH,KAAK,CAACI,MAAN,CAAaN,MAAM,CAACO,KAApB,EAA2B,CAA3B,CAArB;IACAL,KAAK,CAACI,MAAN,CAAaL,WAAW,CAACM,KAAzB,EAAgC,CAAhC,EAAmCF,QAAnC;IAEAR,OAAO,CAACK,KAAD,CAAP;EACA,CATD;;EAUA,oBACC;IAAK,SAAS,EAAC,KAAf;IAAA,wBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAEC,QAAC,eAAD;MAAiB,SAAS,EAAEJ,SAA5B;MAAA,uBACC,QAAC,SAAD;QAAW,WAAW,EAAC,MAAvB;QAAA,UACGU,QAAD,iBACA;UAAK,SAAS,EAAC,MAAf;UAAA,GAA0BA,QAAQ,CAACC,cAAnC;UAAmD,GAAG,EAAED,QAAQ,CAACE,QAAjE;UAAA,UACEd,IAAI,CAACe,GAAL,CAAS,OAAeJ,KAAf,KAAyB;YAAA,IAAxB;cAAExB,EAAF;cAAMC;YAAN,CAAwB;YAClC,oBACC,QAAC,SAAD;cAAoB,WAAW,EAAED,EAAjC;cAAqC,KAAK,EAAEwB,KAA5C;cAAA,UACE,CAACC,QAAD,EAAWI,QAAX,kBACA;gBACC,GAAG,EAAEJ,QAAQ,CAACE,QADf;gBAAA,GAEKF,QAAQ,CAACK,cAFd;gBAAA,GAGKL,QAAQ,CAACM,eAHd;gBAIC,KAAK,EAAE7B,YAAY,CAAC2B,QAAQ,CAAC1B,UAAV,EAAsBsB,QAAQ,CAACK,cAAT,CAAwBE,KAA9C,CAJpB;gBAAA,UAME/B;cANF;gBAAA;gBAAA;gBAAA;cAAA;YAFF,GAAgBD,EAAhB;cAAA;cAAA;cAAA;YAAA,QADD;UAcA,CAfA;QADF;UAAA;UAAA;UAAA;QAAA;MAFF;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QAFD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AA6BA;;GA1CQY,G;;KAAAA,G;AA4CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}